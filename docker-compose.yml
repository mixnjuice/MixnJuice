version: '3'
services:
  frontend:
    build: ./frontend/
    image: mixnjuice/frontend:latest
    container_name: mixnjuice-frontend
    restart: always
    environment:
      VIRTUAL_HOST: ${FRONTEND_HOST}
      VIRTUAL_PORT: ${FRONTEND_PORT}
      LETSENCRYPT_HOST: ${FRONTEND_HOST}
      API_URL: ${FRONTEND_API_URL}
    networks:
      - proxy
  api:
    build: ./api/
    image: mixnjuice/api:latest
    container_name: mixnjuice-api
    restart: always
    environment:
      API_EMAIL_SIMULATE: ${API_EMAIL_SIMULATE}
      API_EMAIL_FROM_ADDRESS: ${API_EMAIL_FROM_ADDRESS}
      API_TOKEN_AGE: ${API_TOKEN_AGE}
      API_TOKEN_LENGTH: ${API_TOKEN_LENGTH}
      API_TOKEN_SECRET: ${API_TOKEN_SECRET}
      API_PASSWORD_SALT_ROUNDS: ${API_PASSWORD_SALT_ROUNDS}
      WEB_HOSTNAME: ${FRONTEND_HOST}
      WEB_PORT: ${FRONTEND_PORT}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_KEY_ID: ${AWS_SECRET_KEY_ID}
      DB_HOST: database
      DB_NAME: ${DB_NAME}
      DB_PASS: ${DB_PASS}
      DB_USER: ${DB_USER}
      VIRTUAL_HOST: ${API_HOST}
      VIRTUAL_PORT: ${API_PORT}
      LETSENCRYPT_HOST: ${API_HOST}
    depends_on:
      - database
    networks:
      - backend
      - proxy
  database:
    image: postgres:latest
    container_name: mixnjuice-api-pg
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - backend
  proxy:
    image: nginx
    container_name: mixnjuice-proxy
    networks:
      - proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
  reloader:
    image: jwilder/docker-gen
    command: -notify-sighup mixnjuice-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: mixnjuice-proxy-reloader
    networks:
      - proxy
    restart: always
    depends_on:
      - proxy
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: mixnjuice-proxy-letsencrypt
    networks:
      - proxy
    restart: always
    depends_on:
      - reloader
    environment:
      NGINX_PROXY_CONTAINER: mixnjuice-proxy
      NGINX_DOCKER_GEN_CONTAINER: mixnjuice-proxy-reloader
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
networks:
  backend:
  proxy:
volumes:
  conf:
  vhost:
  html:
  certs:
